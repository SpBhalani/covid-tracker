{"version":3,"sources":["InfoBox.js","InfoBox2.js","Table.js","LineChart.js","App.js","util.js","index.js"],"names":["InfoBox","title","cases","total","Card","CardContent","Typography","InfoBox2","Table","countries","className","map","country","LineChart","casesType","useState","data","setData","options","plugins","tooltips","mode","intersect","callbacks","label","tooltipItem","numeral","value","format","legend","display","elements","point","radius","maintainAspectRation","scales","xAxes","gridLines","type","time","tooltipFormat","yAxes","tricks","callback","index","values","buildChartData","lastData","chartData","date","newEntry","x","y","push","useEffect","getData","a","fetch","then","res","json","console","log","length","datasets","BackgroundColor","borderColor","App","setCountries","setCountry","countryInfo","setCountryInfo","tableData","setTableData","countries1","name","iso2","sortedData","sort","b","sortData","onclickDropdown","event","countryCode","target","url","FormControl","Select","variant","onChange","MenuItem","todayCases","todayRecovered","recovered","todayDeaths","deaths","tests","testsPerOneMillion","critical","criticalPerOneMillion","population","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.217ffe99.chunk.js","sourcesContent":["import React from 'react'\r\nimport  { Card , CardContent , Typography } from '@mui/material'\r\n/**\r\n* @author\r\n* @function InfoBox\r\n**/\r\n\r\nexport const InfoBox = ({title,cases,total}) => {\r\n  return(\r\n    <Card >\r\n        <CardContent>\r\n            <Typography>\r\n                {title}\r\n            </Typography>\r\n            <h3>{cases}</h3>\r\n            <Typography>\r\n                {total} total\r\n            </Typography>\r\n        </CardContent>\r\n    </Card>\r\n   )\r\n\r\n }","import React from 'react'\r\nimport  { Card , CardContent , Typography } from '@mui/material'\r\n/**\r\n* @author\r\n* @function InfoBox2\r\n**/\r\n\r\nexport const InfoBox2 = ({title,cases,total}) => {\r\n  return(\r\n    <Card >\r\n        <CardContent>\r\n            <Typography>\r\n                {title}\r\n            </Typography>\r\n            <h3>{cases}</h3>\r\n            <Typography>\r\n                {total ? `${total} per Million` : \" \"}\r\n            </Typography>\r\n        </CardContent>\r\n    </Card>\r\n   )\r\n\r\n }","import React from 'react'\r\nimport './table.css'\r\n/**\r\n* @author\r\n* @function Table\r\n**/\r\n\r\nexport const Table = ({countries}) => {\r\n    return (\r\n        <div className=\"table\">\r\n              {\r\n                  countries.map((country) => {\r\n                      return <tr>\r\n                          <td>{country.country}</td>\r\n                          <td>{country.cases}</td>\r\n                      </tr>\r\n                  })\r\n              }\r\n        </div>\r\n    )\r\n\r\n}","import React, { useEffect, useState } from 'react'\r\nimport { Line } from 'react-chartjs-2';\r\nimport numeral from 'numeral'\r\n\r\n/**\r\n* @author\r\n* @function LineChart\r\n**/\r\n\r\nexport const LineChart = ({ casesType = \"cases\" }) => {\r\n\r\n    const [data, setData] = useState([]);\r\n    // https://disease.sh​/v3​/covid-19​/historical​/all?lastdays=120\r\n\r\n    const options = {\r\n        plugins: false,\r\n        tooltips: {\r\n            mode: 'index',\r\n            intersect: false,\r\n            callbacks: {\r\n                label: function (tooltipItem, data) {\r\n                    return numeral(tooltipItem.value).format(\"+0,0\")\r\n                },\r\n            },\r\n        },\r\n        legend: {\r\n            display: false\r\n        },\r\n\r\n        elements: {\r\n            point: {\r\n                radius: 0,\r\n            },\r\n\r\n        },\r\n\r\n        maintainAspectRation: false,\r\n\r\n        scales: {\r\n            xAxes: [\r\n                {\r\n                    gridLines: {\r\n                        display:false\r\n                    },\r\n                    type: \"time\",\r\n                    time: {\r\n                        format: \"MM/DD/YY\",\r\n                        tooltipFormat: \"ll\",\r\n                    },\r\n                },\r\n            ],\r\n            yAxes: [\r\n                {\r\n                    gridLines: {\r\n                        display:false\r\n                    },\r\n                    tricks: {\r\n                        callback: function (value, index, values) {\r\n                            return numeral(value).format(\"0a\");\r\n                        },\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    }\r\n\r\n    const buildChartData = (data, casesType = \"cases\") => {\r\n        const chartData = [];\r\n        let lastData;\r\n\r\n        for (const date in data[casesType]) {\r\n            if (lastData) {\r\n                let newEntry = {\r\n                    x: date,\r\n                    y: data[casesType][date] - lastData\r\n                }\r\n                chartData.push(newEntry);\r\n            }\r\n            lastData = data[casesType][date];\r\n        }\r\n        return chartData;\r\n    }\r\n\r\n    useEffect(() => {\r\n        const getData = async () => {\r\n            await fetch('https://disease.sh/v3/covid-19/historical/all?lastdays=120')\r\n                .then(res => res.json())\r\n                .then(data => {\r\n                    const chartData = buildChartData(data,casesType);\r\n                    setData(chartData);\r\n                    console.log(chartData);\r\n                })\r\n        }\r\n        getData();\r\n    }, [casesType])\r\n\r\n    return (\r\n        <div>\r\n\r\n            {data?.length > 0 && (\r\n                <Line\r\n                    options={options}\r\n                    data={{\r\n                        datasets: [\r\n                            {\r\n                                BackgroundColor: \"#111111\",\r\n                                borderColor: \"rgb(171 24 24)\",\r\n                                data: data,\r\n                            }\r\n                        ]\r\n                    }}\r\n                />\r\n            )}\r\n\r\n        </div>\r\n    )\r\n\r\n}","import './App.css';\nimport { FormControl, Select, MenuItem, Card, CardContent } from '@mui/material'\nimport { useState, useEffect } from 'react';\nimport { InfoBox } from './InfoBox';\nimport {InfoBox2} from './InfoBox2';\nimport { Table  } from './Table';\nimport {LineChart} from './LineChart';\nimport { sortData } from './util'\nimport \"leaflet/dist/leaflet.css\";\n\n\nfunction App() {\n\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"Worldwide\");\n  const [countryInfo , setCountryInfo] = useState({});\n  const [tableData , setTableData] = useState([]);\n\n  useEffect(()=>{\n    fetch(\"https://disease.sh/v3/covid-19/all\")\n    .then((country) => country.json())\n    .then(data => {\n      setCountryInfo(data);\n    })\n  } ,[])\n\n\n  useEffect(() => {\n    const getCountriesData = () => {\n      fetch('https://disease.sh/v3/covid-19/countries')\n        .then((country) => country.json())\n        .then((data) => {\n          const countries1 = data.map((country) => ({\n            name: country.country,\n            value: country.countryInfo.iso2\n          }));\n          // console.log(countries1);\n          setCountries(countries1);\n          const sortedData = sortData(data);\n          setTableData(sortedData);\n        });\n    }\n\n    getCountriesData();\n  }, [])\n\n\n  const onclickDropdown = async (event) => {\n    const countryCode = event.target.value;\n    \n    const url = countryCode === \"Worldwide\" ? \"https://disease.sh/v3/covid-19/all\" : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n    \n    await fetch(url)\n    .then(country => country.json())\n    .then((data) => {\n      \n      setCountry(countryCode);\n      setCountryInfo(data);\n    })\n\n  }\n  return (\n    <div className=\"App\">\n      <div className=\"app__left\">\n        <div className=\"app__header\">\n          <h1>Covid-19 Tracker {country}</h1>\n          <FormControl className=\"app__dropdown\">\n            <Select variant=\"outlined\" onChange={onclickDropdown} value={country}>\n              <MenuItem value=\"Worldwide\">Worldwide</MenuItem>\n              {\n                countries.map((country) => {\n                  return <MenuItem value={country.value}>{country.name}</MenuItem>\n                })\n              }\n            </Select>\n          </FormControl>\n        </div>\n          <h3 className=\"text\">{countryInfo.country}</h3>\n        <div className=\"app__infobox box1\">\n          <InfoBox className=\"infobox\" title=\"Covid-19 Cases\" cases={countryInfo.todayCases} total={countryInfo.cases} />\n          <InfoBox className=\"infobox\" title=\"Recovered\" cases={countryInfo.todayRecovered} total={countryInfo.recovered} />\n          <InfoBox className=\"infobox\" title=\"Deaths\" cases={countryInfo.todayDeaths} total={countryInfo.deaths} />\n        </div>\n        <div className=\"app__infobox box2\">\n          <InfoBox2 className=\"infobox\" title=\"Total Tests\" cases={countryInfo.tests} total={countryInfo.testsPerOneMillion} />\n          <InfoBox2 className=\"infobox\" title=\"Critical Cases\" cases={countryInfo.critical} total={countryInfo.criticalPerOneMillion} />\n          <InfoBox2 className=\"infobox\" title=\"Total Population\" cases={countryInfo.population}  />\n        </div>\n\n      </div>\n\n      <Card className=\"app__right\">\n        <CardContent>\n          <h3>Covid Cases by Country</h3>\n          <Table countries={tableData}/>\n          <h3>World wide new Cases</h3>\n              <LineChart casesType =\"cases\"/>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","export const sortData = (data) =>{\r\n     const sortedData = data.sort((a,b) => a.cases > b.cases ? -1 : 1);\r\n    return sortedData;\r\n    }","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}